diff --git a/bazel/kotlin.bzl b/bazel/kotlin.bzl
index 56536062c3..76580d1aa4 100644
--- a/bazel/kotlin.bzl
+++ b/bazel/kotlin.bzl
@@ -57,6 +57,7 @@ def kotlin_compile(ctx, name, srcs, deps, friends, out, jre):
     args.add("-module-name", name)
     args.add("-nowarn")  # Mirrors the default javac opts.
     args.add("-jvm-target", "1.8")
+    args.add("-language-version", "1.4")
     args.add("-api-version", "1.3")  # b/166582569
     args.add("-Xjvm-default=enable")
 
diff --git a/bazel/src/com/android/tools/kotlin/KotlinCompiler.java b/bazel/src/com/android/tools/kotlin/KotlinCompiler.java
index 180b73b86b..d565b18d34 100644
--- a/bazel/src/com/android/tools/kotlin/KotlinCompiler.java
+++ b/bazel/src/com/android/tools/kotlin/KotlinCompiler.java
@@ -16,7 +16,7 @@
 
 package com.android.tools.kotlin;
 
-import static org.jetbrains.kotlin.cli.common.messages.PlainTextMessageRenderer.KOTLIN_COLORS_ENABLED_PROPERTY;
+import static org.jetbrains.kotlin.cli.common.CompilerSystemProperties.KOTLIN_COLORS_ENABLED_PROPERTY;
 
 import com.android.tools.utils.BazelWorker;
 import com.android.tools.utils.JarOutputCompiler;
@@ -47,7 +47,7 @@ public class KotlinCompiler extends JarOutputCompiler {
     protected boolean compile(List<String> forwardedArgs, String classPath, File outDir) {
         // Extracted from CLITool.doMain:
         System.setProperty("java.awt.headless", "true");
-        System.setProperty(KOTLIN_COLORS_ENABLED_PROPERTY, "true");
+        System.setProperty(KOTLIN_COLORS_ENABLED_PROPERTY.getProperty(), "true");
 
         List<String> args = new ArrayList<>(forwardedArgs.size() + 16);
 
diff --git a/bazel/toplevel.WORKSPACE b/bazel/toplevel.WORKSPACE
index e42e934838..71b8ef15e4 100644
--- a/bazel/toplevel.WORKSPACE
+++ b/bazel/toplevel.WORKSPACE
@@ -10,15 +10,6 @@ register_toolchains(
   "@native_toolchain//:cc-toolchain-x64_windows-clang-cl",
 )
 
-local_repository(
-    name = "blaze",
-    path = "tools/vendor/google3/blaze",
-)
-
-load("@blaze//:binds.bzl", "blaze_binds")
-
-blaze_binds()
-
 local_repository(
     name = "io_bazel_rules_kotlin",
     path = "tools/external/bazelbuild-rules-kotlin",
diff --git a/build-system/integration-test/integration-tests.gradle b/build-system/integration-test/integration-tests.gradle
index 92c509b3d0..96ccee3eac 100644
--- a/build-system/integration-test/integration-tests.gradle
+++ b/build-system/integration-test/integration-tests.gradle
@@ -70,34 +70,3 @@ task("createTestTempDirectory") {
     doLast { tempFile.mkdirs() }
 }
 
-test {
-    description =
-            "Runs the data binding gradle integration tests"
-    systemProperties['jar.path'] = jar.archivePath
-    systemProperties['java.io.tmpdir'] = tempFile.absolutePath
-    environment = testEnvironment
-
-    // Always run the task, when requested.
-    outputs.upToDateWhen { false }
-
-    maxParallelForks = Runtime.runtime.availableProcessors() / 4
-
-    useJUnit {
-        String includedCategories = providerFactory.systemProperty('test.includeCategories').forUseAtConfigurationTime().orNull
-        if (includedCategories != null) {
-            def categories = includedCategories.split(',')
-            String defaultPackage = "com.android.build.gradle.integration.common.category."
-            categories = categories.collect { it.charAt(0).isUpperCase() ? defaultPackage + it : it }
-            includeCategories categories as String[]
-        }
-        excludeCategories "com.android.build.gradle.integration.common.category.OnlineTests"
-    }
-
-    testLogging {
-        events = ['FAILED', 'SKIPPED', 'STANDARD_ERROR']
-        displayGranularity = 2 // Show test class and method.
-        exceptionFormat = 'full'
-        showCauses = true
-    }
-    dependsOn ':publishAndroidGradleLocal' , createTestTempDirectory
-}
